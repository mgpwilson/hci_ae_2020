{"version":3,"sources":["components/Info.js","components/PreventativeMeasures.js","components/ContextFactualisation.js","components/LineGraph.js","components/SIR.js","components/BarChart.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","leftPadding","paddingLeft","spacing","Info","props","classes","infoString","Tooltip","placement","title","color","className","checkboxLabel","display","alignItems","PreventativeMeasures","baseContactRate","pandemic","setContactRate","factorValues","closeEducation","reducedPublicTransport","avoidGroups","travelQuarantine","workFromHome","contactTracing","handWashing","masks","outdoorSocialising","socialDistancing","closeIndoorDining","useState","contractTracing","factorState","setFactorState","toggleFactor","factor","prevState","useEffect","newContactRate","Object","entries","value","FormGroup","FormLabel","component","FormControlLabel","control","Checkbox","label","Typography","variant","onChange","ContextFactualisation","overflow","sir","days","List","ListItem","getTotalHospitalCapacityOverFlow","Math","abs","round","VentilatorCapacityMessage","getTotalVentilatorCapacityOverFlow","getRecoveredAtDay","population","toPrecision","InfectedRatio","getDeathsAtDay","DeathRatio","LineGraph","N","hospitalBedCapacity","Array","fill","series","name","data","map","x","slice","options","chart","type","zoom","enabled","toolbar","show","animations","easing","colors","blue","red","green","grey","purple","stroke","width","dashArray","dataLabels","xaxis","labels","align","minWidth","maxWidth","style","fontSize","fontFamily","fontWeight","cssClass","offsetX","offsetY","rotate","formatter","yaxis","max","tooltip","fixed","position","height","window","innerHeight","innerWidth","copy","assign","SIR","contactRate","derive","dydt","y","t","recoveryRate","deathRate","this","initialInfected","initialRecovered","initialDead","max_days","bedCapacity","ventilatorCapacity","hospitalizationRate","ventilationRate","day","simulation","getInfectedAtDay","i","getBedCapacityMinusCasesAtDay","hospitalized","getVentilatorCapacityMinusCasesAtDay","initialSIR","integrator","rk4","ya","push","step","BarChart","pandemic1","pandemic2","chartTitle","plotOptions","bar","horizontal","categories","min","forceNiceScale","content","overflowX","overflowY","centerTitle","placeItems","sideBar","padding","sideBarBoxOuter","sideBarBoxInner","graphsContainer","graphsBoxOuter","marginTop","flexDirection","justifyContent","sliderContainer","paddingRight","paddingBottom","slider","paddingTop","barChart","lineGraph","popover","pointerEvents","MouseOverPopover","React","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","hoverContents","popoverContents","aria-owns","undefined","aria-haspopup","onMouseEnter","event","currentTarget","onMouseLeave","Popover","id","paper","anchorOrigin","vertical","transformOrigin","onClose","disableRestoreFocus","PaperProps","Paper","p","elevation","popoverBox","Box","GameplayPopover","marginBottom","gutterBottom","App","setDays","contactRate1","setContactRate1","contactRate2","setContactRate2","CssBaseline","AppBar","Toolbar","flexGrow","Grid","container","item","xs","Slider","onChangeCommitted","e","newVal","defaultValue","getAriaValueText","aria-labelledby","marks","valueLabelDisplay","marginLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cc143af.chunk.js","sourcesContent":["import { makeStyles, Tooltip } from \"@material-ui/core\";\r\nimport { HelpOutline as HelpIcon } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  leftPadding: {\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Info = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { infoString } = props;\r\n\r\n  return (\r\n    <Tooltip placement=\"right\" title={infoString}>\r\n      <HelpIcon color=\"action\" className={classes.leftPadding} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import {\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  FormLabel,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Info from \"./Info\";\r\n\r\nconst useStyles = makeStyles({\r\n  checkboxLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst PreventativeMeasures = (props) => {\r\n  const { baseContactRate, pandemic, setContactRate } = props;\r\n  const classes = useStyles();\r\n\r\n  const factorValues = {\r\n    // avg num ppl someone infected is exposed to per day\r\n    closeEducation: 0.76,\r\n    reducedPublicTransport: 0.9,\r\n    avoidGroups: 0.76,\r\n    travelQuarantine: 0.95,\r\n    workFromHome: 0.75,\r\n    contactTracing: 0.8,\r\n    // probability of each exposure becoming an infection\r\n    handWashing: 0.95,\r\n    masks: 0.8,\r\n    outdoorSocialising: 0.8,\r\n    socialDistancing: 0.8,\r\n    closeIndoorDining: 0.8,\r\n  };\r\n\r\n  const [factorState, setFactorState] = useState({\r\n    closeEducation: false,\r\n    reducedPublicTransport: false,\r\n    avoidGroups: false,\r\n    travelQuarantine: false,\r\n    workFromHome: false,\r\n    contractTracing: false,\r\n    handWashing: false,\r\n    masks: false,\r\n    outdoorSocialising: false,\r\n    socialDistancing: false,\r\n    closeIndoorDining: false,\r\n  });\r\n\r\n  const toggleFactor = (factor) => {\r\n    setFactorState((prevState) => ({\r\n      ...prevState,\r\n      [factor]: !prevState[factor],\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let newContactRate = baseContactRate;\r\n    for (const [factor, value] of Object.entries(factorValues)) {\r\n      newContactRate = factorState[factor]\r\n        ? newContactRate * value\r\n        : newContactRate;\r\n    }\r\n    pandemic.setContactRate(newContactRate);\r\n    setContactRate(newContactRate);\r\n  }, [factorState]);\r\n\r\n  // console.log(factorState);\r\n\r\n  return (\r\n    <FormGroup>\r\n      <FormLabel component=\"legend\">Infection Risk</FormLabel>\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Hand Washing</Typography>{\" \"}\r\n            <Info infoString=\"Everyone washes their hands regularly.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"handWashing\");\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Social Distancing</Typography>{\" \"}\r\n            <Info infoString=\"Everyone maintains 2 metre social distancing.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"socialDistancing\");\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Masks</Typography>{\" \"}\r\n            <Info infoString=\"Everyone wears a mask and wears it correctly.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"masks\");\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Close Indoor Dining</Typography>{\" \"}\r\n            <Info infoString=\"Close restaurants and other indoor dining where customers must take off their masks in an enclosed space.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"closeIndoorDining\");\r\n        }}\r\n      />\r\n\r\n      <FormLabel component=\"legend\">Frequency of Exposure</FormLabel>\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Close Education</Typography>{\" \"}\r\n            <Info infoString=\"All primary and secondary education is closed.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"closeEducation\");\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Reduced Public Transport</Typography>{\" \"}\r\n            <Info infoString=\"Public trasport capacity is restricted.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"reducedPublicTransport\");\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Outdoors Only Socialising</Typography>{\" \"}\r\n            <Info infoString=\"Socialising between people is restricted to being outdoors only.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"outdoorSocialising\");\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Avoid Groups</Typography>{\" \"}\r\n            <Info infoString=\"Avoid groups larger than 6 people and contact between households.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"avoidGroups\");\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Travel Quarantine</Typography>{\" \"}\r\n            <Info infoString=\"Quarantine all travelers arriving from outside the country.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"travelQuarantine\");\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Work From Home</Typography>{\" \"}\r\n            <Info infoString=\"Everyone who can work from home, works from home.\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"workFromHome\");\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        label={\r\n          <div className={classes.checkboxLabel}>\r\n            <Typography variant=\"body2\">Contact Tracing</Typography>{\" \"}\r\n            <Info infoString=\"Contact tracing for all known cases (untested cases will not be traced).\" />\r\n          </div>\r\n        }\r\n        onChange={() => {\r\n          toggleFactor(\"contactTracing\");\r\n        }}\r\n      />\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default PreventativeMeasures;\r\n","import { List, ListItem, Typography } from \"@material-ui/core\";\r\n\r\nconst ContextFactualisation = (props) => {\r\n  //const { covidState } = props.covidState;\r\n  const sir = props.sir;\r\n  const days = props.days;\r\n\r\n  let HospitalCapacityMessage = (overflow) => {\r\n    let message = \"\";\r\n    if (overflow >= 0)\r\n      message =\r\n        \"SUCCESS! The NHS will be able to treat everyone who needs treatment\";\r\n    else {\r\n      message =\r\n        \"WARNING! Under the measures you have chosen, the NHS will have to turn away \" +\r\n        Math.abs(Math.round(overflow)) +\r\n        \" sick and dying people.\";\r\n    }\r\n    return message;\r\n  };\r\n\r\n  let VentilatorCapacityMessage = (overflow) => {\r\n    let message = \"\";\r\n    if (overflow >= 0)\r\n      message =\r\n        \"SUCCESS! Everyone who needs a ventilator will be able to use one\";\r\n    else {\r\n      message =\r\n        \"WARNING! Under the measures you have chosen, \" +\r\n        Math.abs(Math.round(overflow)) +\r\n        \" people who need ventilators to breathe will be unable to use one. This may result in death.\";\r\n    }\r\n    return message;\r\n  };\r\n\r\n  let InfectedRatio = (days) => {\r\n    let r = sir.getRecoveredAtDay(days) / sir.population;\r\n    return (r * 100).toPrecision(3);\r\n  };\r\n\r\n  let DeathRatio = (days) => {\r\n    // TODO why is deathsAtDay off of value shown in line graph by factor of 10?\r\n    let r = sir.getDeathsAtDay(days) / 10 / sir.population;\r\n    return (r * 100).toPrecision(3);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"body2\">Under these measures:</Typography>\r\n      <List>\r\n        <ListItem>\r\n          <Typography>\r\n            {HospitalCapacityMessage(sir.getTotalHospitalCapacityOverFlow())}\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Typography>\r\n            {VentilatorCapacityMessage(\r\n              sir.getTotalVentilatorCapacityOverFlow()\r\n            )}\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Typography>\r\n            {InfectedRatio(days)}% of Scotland would be infected in the first{\" \"}\r\n            {days} days.\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Typography>\r\n            {DeathRatio(days)}% people would die in the first {days} days.\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContextFactualisation;\r\n","import { colors } from \"@material-ui/core\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n// Using ApexCharts\r\nconst LineGraph = (props) => {\r\n  const { pandemic, days } = props;\r\n\r\n  const N = 5463000; // Population\r\n  const hospitalBedCapacity = new Array(days).fill(20553 / 0.075);\r\n\r\n  const series = [\r\n    {\r\n      name: \"Susceptible\",\r\n      data: pandemic.map((x) => Math.round(x[0] * N)).slice(0, days),\r\n    },\r\n\r\n    {\r\n      name: \"Infected\",\r\n      data: pandemic.map((x) => Math.round(x[1] * N)).slice(0, days),\r\n    },\r\n    {\r\n      name: \"Recovered\",\r\n      data: pandemic.map((x) => Math.round(x[2] * N)).slice(0, days),\r\n    },\r\n\r\n    {\r\n      name: \"Deaths\",\r\n      data: pandemic.map((x) => Math.round(x[3] * N * 0.1)).slice(0, days),\r\n    },\r\n    {\r\n      name: \"NHS Scotland Max Capacity (Infections/Day)\",\r\n      data: hospitalBedCapacity,\r\n    },\r\n  ];\r\n\r\n  const options = {\r\n    chart: {\r\n      type: \"line\",\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      animations: {\r\n        easing: \"easeout\",\r\n      },\r\n    },\r\n    colors: [\r\n      colors.blue[400],\r\n      colors.red[400],\r\n      colors.green[400],\r\n      colors.grey[900],\r\n      colors.purple[400],\r\n    ],\r\n    stroke: {\r\n      width: [4, 4, 4, 4, 2],\r\n      dashArray: [0, 0, 0, 0, 8],\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    xaxis: {\r\n      type: \"numeric\",\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n          colors: [],\r\n          fontSize: '12px',\r\n          fontFamily: 'Helvetica, Arial, sans-serif',\r\n          fontWeight: 400,\r\n          cssClass: 'apexcharts-yaxis-label',\r\n        },\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        rotate: 0,\r\n        formatter: (value) => { return \"day \" + Math.round(value) },\r\n      },\r\n    },\r\n    yaxis: {\r\n      max: 5500000,\r\n      labels: {\r\n        show: true,\r\n        align: \"right\",\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n          colors: [],\r\n          fontSize: \"12px\",\r\n          fontFamily: \"Helvetica, Arial, sans-serif\",\r\n          fontWeight: 400,\r\n          cssClass: \"apexcharts-yaxis-label\",\r\n        },\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        rotate: 0,\r\n        formatter: (value) => { return (value.toPrecision(2) / 1000000) + \" million\" },\r\n      },\r\n    },\r\n    tooltip: {\r\n      fixed: {\r\n        enabled: true,\r\n        position: 'topRight',\r\n        offsetX: 350,\r\n        offsetY: 50,\r\n      }\r\n    }\r\n  };\r\n\r\n  const height = (window.innerHeight - 128) / 2 - 20;\r\n  const width = (window.innerWidth * 3.5) / 12;\r\n\r\n  return (\r\n    <Chart\r\n      options={options}\r\n      series={series}\r\n      type=\"line\"\r\n      height={height}\r\n      width={width}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import rk4 from \"ode-rk4\";\r\n\r\n// Code derived from http://epirecip.es/epicookbook/chapters/sir/js\r\nconst copy = (x) => {\r\n  return Object.assign({}, x);\r\n};\r\n\r\nclass SIR {\r\n  constructor(contactRate) {\r\n    this.initialInfected = 0.009;\r\n    this.initialRecovered = 0;\r\n    this.initialDead = 0;\r\n\r\n    this.recoveryRate = 1 / 14; // Recovery rate, 1 / mean amount of days it takes to recover\r\n    this.contactRate = contactRate; // Contact rate, this is what we want to adjust to flatten the curve\r\n    this.deathRate = 0.04;\r\n\r\n    this.max_days = 120;\r\n    this.population = 5463000;\r\n    this.bedCapacity = 20553;\r\n    this.ventilatorCapacity = 585;\r\n    this.hospitalizationRate = 0.075;\r\n    this.ventilationRate = 0.028; // of hospitalized people\r\n  }\r\n\r\n  derive = (dydt, y, t) => {\r\n    dydt[0] = -this.contactRate * y[0] * y[1];\r\n    dydt[1] =\r\n      this.contactRate * y[0] * y[1] -\r\n      this.recoveryRate * y[1] -\r\n      this.deathRate * y[1];\r\n    dydt[2] = this.recoveryRate * y[1];\r\n    dydt[3] = this.deathRate * y[1];\r\n  };\r\n\r\n  get simulation() {\r\n    let initialSuscepitble = 1 - this.initialInfected - this.initialRecovered;\r\n    const initialSIR = [\r\n      initialSuscepitble,\r\n      this.initialInfected,\r\n      this.initialRecovered,\r\n      this.initialDead,\r\n    ]; // [S, I, R]\r\n    var integrator = rk4(initialSIR, this.derive, 0, 1); // [Initial SIR, SIR function, initial time, timestep]\r\n    var days = 0; // Initial time: 0 days\r\n    var y = initialSIR;\r\n    var ya = []; // Results list\r\n    ya.push(copy(y));\r\n    while (true) {\r\n      days = days + 1;\r\n      if (days > this.max_days) break;\r\n      integrator = integrator.step();\r\n      ya.push(copy(integrator.y));\r\n    }\r\n    return ya;\r\n  }\r\n\r\n  setContactRate(contactRate) {\r\n    // console.log(this.contactRate);\r\n    this.contactRate = contactRate;\r\n    // console.log(this.contactRate);\r\n  }\r\n\r\n  getSusceptibleAtDay(day) {\r\n    return Math.round(this.simulation[day][0] * this.population);\r\n  }\r\n\r\n  getInfectedAtDay(day) {\r\n    return Math.round(this.simulation[day][1] * this.population);\r\n  }\r\n\r\n  getRecoveredAtDay(day) {\r\n    return Math.round(this.simulation[day][2] * this.population);\r\n  }\r\n\r\n  getDeathsAtDay(day) {\r\n    return Math.round(this.simulation[day][3] * this.population);\r\n  }\r\n\r\n  getBedCapacityMinusCasesAtDay(day) {\r\n    return (\r\n      this.bedCapacity - this.getInfectedAtDay(day) * this.hospitalizationRate\r\n    );\r\n  }\r\n\r\n  getTotalHospitalCapacityOverFlow() {\r\n    let overflow = 0;\r\n    for (let i = 0; i <= this.max_days; i++) {\r\n      overflow += this.getBedCapacityMinusCasesAtDay(i);\r\n    }\r\n    return overflow;\r\n  }\r\n\r\n  getVentilatorCapacityMinusCasesAtDay(day) {\r\n    let hospitalized = this.getInfectedAtDay(day) * this.hospitalizationRate;\r\n    return this.ventilatorCapacity - hospitalized * this.ventilationRate;\r\n  }\r\n\r\n  getTotalVentilatorCapacityOverFlow() {\r\n    let overflow = 0;\r\n    for (let i = 0; i <= this.max_days; i++) {\r\n      overflow += this.getVentilatorCapacityMinusCasesAtDay(i);\r\n    }\r\n    return overflow;\r\n  }\r\n}\r\n\r\nexport default SIR;\r\n","import Chart from \"react-apexcharts\";\r\nimport {colors} from \"@material-ui/core\";\r\n\r\nconst BarChart = (props) => {\r\n  const { pandemic1, pandemic2, days, chartTitle } = props;\r\n\r\n  const series = [\r\n    {\r\n      name: \"Infections\",\r\n      data: [pandemic1.getRecoveredAtDay(days), pandemic2.getRecoveredAtDay(days)],\r\n    },\r\n      //TODO why is deaths larger than line graph by factor of 10??\r\n    {\r\n      name: \"Dead\",\r\n      data: [pandemic1.getDeathsAtDay(days)/10, pandemic2.getDeathsAtDay(days)/10],\r\n    },\r\n  ];\r\n\r\n  const options = {\r\n    chart: {\r\n      toolbar: { show: false },\r\n      animations: {\r\n        easing: \"easeout\",\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: [\"Model 1\", \"Model 2\"],\r\n      style: {\r\n        fontFamily: \"Roboto\",\r\n        fontWeight: \"normal\",\r\n      },\r\n      min: 0,\r\n      forceNiceScale: true,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n          colors: [],\r\n          fontSize: '12px',\r\n          fontFamily: 'Helvetica, Arial, sans-serif',\r\n          fontWeight: 400,\r\n          cssClass: 'apexcharts-yaxis-label',\r\n        },\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        rotate: 0,\r\n        formatter: (value) => { return (value / 1000000).toPrecision(2) + \"million\" },\r\n      },\r\n    },\r\n    yaxis: {\r\n      min: 0,\r\n    },\r\n    colors: [\r\n      colors.red[400],\r\n      colors.grey[900],\r\n    ],\r\n    tooltip: {\r\n      x: {\r\n        show: true,\r\n      },\r\n      y: {\r\n        show: true,\r\n        formatter: (value) => { return (value / 1000000).toPrecision(3) + \"million\" }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Chart\r\n      options={options}\r\n      series={series}\r\n      type=\"bar\"\r\n      height={window.innerHeight / 2}\r\n      width={window.innerWidth / 3 - 80}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  CssBaseline,\r\n  Grid,\r\n  Paper,\r\n  Slider,\r\n  Toolbar,\r\n  Typography,\r\n  Popover,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport HelpIcon from \"@material-ui/icons/HelpOutline\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport PreventativeMeasures from \"./components/PreventativeMeasures\";\r\nimport ContextFactualisation from \"./components/ContextFactualisation\";\r\nimport Graph from \"./components/LineGraph\";\r\nimport SIR from \"./components/SIR\";\r\nimport BarChart from \"./components/BarChart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    height: \"calc(100vh - 48px)\",\r\n    width: \"calc(100vw - (100vw - 100%))\",\r\n    overflowX: \"hidden\",\r\n    overflowY: \"hidden\",\r\n  },\r\n\r\n  centerTitle: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n  },\r\n\r\n  sideBar: {\r\n    height: \"100%\",\r\n    padding: theme.spacing(1),\r\n  },\r\n  sideBarBoxOuter: {\r\n    height: `calc(50% - ${theme.spacing(2)}px)`,\r\n    padding: theme.spacing(1),\r\n  },\r\n  sideBarBoxInner: {\r\n    height: `calc(100% - ${theme.spacing(2)}px - 20px)`,\r\n    padding: theme.spacing(2),\r\n    overflowY: \"scroll\",\r\n  },\r\n\r\n  graphsContainer: {\r\n    height: `calc(100vh - 48px - ${theme.spacing(4)}px)`,\r\n    padding: theme.spacing(1),\r\n  },\r\n  graphsBoxOuter: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    padding: theme.spacing(1),\r\n    marginTop: \"2em\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  sliderContainer: {\r\n    paddingLeft: \"70px\",\r\n    paddingRight: \"20px\",\r\n    paddingBottom: \"10px\",\r\n    width: \"100%\",\r\n  },\r\n  slider: {\r\n    paddingTop: \"20px\",\r\n  },\r\n  barChart: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  lineGraph: {\r\n    paddingTop: \"0px\",\r\n  },\r\n  popover: {\r\n    pointerEvents: \"none\",\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  // TEMP\r\n  const [days, setDays] = useState(41);\r\n\r\n  const baseContactRate = 0.5;\r\n  const [contactRate1, setContactRate1] = useState(baseContactRate);\r\n  const pandemic1 = new SIR(contactRate1);\r\n\r\n  const [contactRate2, setContactRate2] = useState(baseContactRate);\r\n  const pandemic2 = new SIR(contactRate2);\r\n\r\n  const sliderMarks = [\r\n    {\r\n      value: 30,\r\n      label: \"30 days\",\r\n    },\r\n    {\r\n      value: 60,\r\n      label: \"60 days\",\r\n    },\r\n    {\r\n      value: 90,\r\n      label: \"90 days\",\r\n    },\r\n    {\r\n      value: 120,\r\n      label: \"120 days\",\r\n    },\r\n  ];\r\n\r\n  function sliderValuetext(value) {\r\n    return `${value} days`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar elevation={0} position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            style={{ flexGrow: 1 }}\r\n            align=\"center\"\r\n          >\r\n            COVIDUALISE: A Visualisation Tool For COVID-19 Infection Rates in\r\n            Scotland\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Grid container component=\"main\" className={classes.content}>\r\n        {/* Preventative Measures */}\r\n        <Grid item xs={2} className={classes.sideBar}>\r\n          <div className={classes.centerTitle}>\r\n            <Typography component=\"h2\" variant=\"subtitle1\">\r\n              <b>Step 1: Settings</b>\r\n            </Typography>\r\n            <Typography component=\"h6\" variant=\"body2\">\r\n              Change the behaviour of two populations\r\n            </Typography>\r\n          </div>\r\n\r\n          <div className={classes.sideBarBoxOuter}>\r\n            <Typography align=\"center\" component=\"h2\" variant=\"subtitle2\">\r\n              Model 1\r\n            </Typography>\r\n            <Paper variant=\"outlined\" className={classes.sideBarBoxInner}>\r\n              <PreventativeMeasures\r\n                baseContactRate={baseContactRate}\r\n                pandemic={pandemic1}\r\n                setContactRate={setContactRate1}\r\n              />\r\n            </Paper>\r\n          </div>\r\n\r\n          <div className={classes.sideBarBoxOuter}>\r\n            <Typography align=\"center\" component=\"h2\" variant=\"subtitle2\">\r\n              Model 2\r\n            </Typography>\r\n            <Paper variant=\"outlined\" className={classes.sideBarBoxInner}>\r\n              <PreventativeMeasures\r\n                baseContactRate={baseContactRate}\r\n                pandemic={pandemic2}\r\n                setContactRate={setContactRate2}\r\n              />\r\n            </Paper>\r\n          </div>\r\n        </Grid>\r\n\r\n        {/* Visualation and Graphing */}\r\n        <Grid item xs={7} className={classes.graphsContainer}>\r\n          <div className={classes.centerTitle}>\r\n            <Typography component=\"h2\" variant=\"subtitle1\">\r\n              <b>Step 2: Compare Pandemic Growth</b>\r\n            </Typography>\r\n            <Typography component=\"h6\" variant=\"body2\">\r\n              The visualisations below show how an identical pandemic spreads\r\n              differently depending on the behaviour of the two populations\r\n            </Typography>\r\n          </div>\r\n\r\n          <Grid container>\r\n            <Grid item xs={6} className={classes.graphsBoxOuter}>\r\n              <Graph\r\n                pandemic={pandemic1.simulation}\r\n                days={days}\r\n                className={classes.lineGraph}\r\n              />\r\n              <Graph pandemic={pandemic2.simulation} days={days} />\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.barChart}>\r\n              <div className={classes.sliderContainer}>\r\n                <Typography id=\"discrete-slider-always\" gutterBottom>\r\n                  Adjust Simulation Length\r\n                </Typography>\r\n                <Slider\r\n                  onChangeCommitted={(e, newVal) => setDays(newVal)}\r\n                  defaultValue={41}\r\n                  getAriaValueText={sliderValuetext}\r\n                  aria-labelledby=\"discrete-slider-custom\"\r\n                  min={20}\r\n                  max={120}\r\n                  marks={sliderMarks}\r\n                  valueLabelDisplay=\"auto\"\r\n                  className={classes.slider}\r\n                />\r\n              </div>\r\n\r\n              <Typography\r\n                  className={classes.centerTitle}\r\n                  style={{marginLeft: \"1.5em\", marginTop: \"1.5em\"}}\r\n              >\r\n                Totals at Day {days}\r\n              </Typography>\r\n              <BarChart\r\n                pandemic1={pandemic1}\r\n                pandemic2={pandemic2}\r\n                days={days}\r\n                name={\"Total people\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Context and Factualisation */}\r\n        <Grid item xs={3} className={classes.sideBar}>\r\n          <div className={classes.centerTitle}>\r\n            <Typography component=\"h2\" variant=\"subtitle1\">\r\n              <b>Step 3: Context & Policy</b>\r\n            </Typography>\r\n            <Typography component=\"body1\">\r\n              <GameplayPopover />\r\n            </Typography>\r\n          </div>\r\n\r\n          <div className={classes.sideBarBoxOuter}>\r\n            <Typography align=\"center\" component=\"h2\" variant=\"subtitle2\">\r\n              Model 1\r\n            </Typography>\r\n            <Paper variant=\"outlined\" className={classes.sideBarBoxInner}>\r\n              <ContextFactualisation sir={pandemic1} days={days} />\r\n            </Paper>\r\n          </div>\r\n\r\n          <div className={classes.sideBarBoxOuter}>\r\n            <Typography align=\"center\" component=\"h2\" variant=\"subtitle2\">\r\n              Model 2\r\n            </Typography>\r\n            <Paper variant=\"outlined\" className={classes.sideBarBoxInner}>\r\n              <ContextFactualisation sir={pandemic2} days={days} />\r\n            </Paper>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const MouseOverPopover = (props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const hoverContents = props.hoverContents;\r\n  const popoverContents = props.popoverContents;\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        aria-owns={open ? \"mouse-over-popover\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n        variant=\"body1\"\r\n      >\r\n        {hoverContents}\r\n      </Typography>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        width=\"75%\"\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n        PaperProps={{\r\n          style: { width: \"50%\" },\r\n        }}\r\n      >\r\n        <Paper p={2} elevation={3} className={classes.popoverBox}>\r\n          <Box p={2} className={classes.popoverBox}>\r\n            {popoverContents}\r\n          </Box>\r\n        </Paper>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameplayPopover = () => {\r\n  const hoverContents = () => {\r\n    return (\r\n      <Typography variant=\"body2\">\r\n        Learn more about pandemic management by thinking like a leader{\" \"}\r\n        <HelpIcon\r\n          color=\"action\"\r\n          style={{ marginBottom: \"-0.2em\", paddingBottom: \"-0.2em\" }}\r\n        />\r\n      </Typography>\r\n    );\r\n  };\r\n\r\n  const popoverContents = () => {\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h5\">\r\n          <MailOutlineIcon\r\n            style={{ marginBottom: \"-0.1em\", paddingBottom: \"-0.1em\" }}\r\n          />{\" \"}\r\n          From: Nicola Sturgeon\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Nicola Sturgeon needs your help!\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          The Scottish Parliament is entrusting you to pick Scotland's COVID\r\n          policies for the next 120 days.\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Use the simulation settings tool on the far left to pick from the\r\n          available policies and compare their effectiveness. Your MPs will use\r\n          the Game Feedback sections to message you feedback on your choices.\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Keep Scotland safe!\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom style={{ marginTop: \"1em\" }}>\r\n          Your Goal:\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Your goal is to protect NHS Scotland until a vaccine is released.\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          If daily infections outpace NHS Scotland's maximum capacity hospitals\r\n          will start running out of beds and ventilators.\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Hint: The aim of this simulation is to 'flatten the curve'. Choose\r\n          stronger measures to avoid unnecessary deaths.\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          <em>\r\n            (The NHS Scotland maximum capacity is indicated on the graphs by a\r\n            dashed purple line.)\r\n          </em>\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <MouseOverPopover\r\n      hoverContents={hoverContents()}\r\n      popoverContents={popoverContents()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}